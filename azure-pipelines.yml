# -*- mode: yaml -*-

trigger:
  branches:
    include:
      - master
      - cmake-update
  paths:
    exclude:
      - azure-pipelines.yml
  tags:
    exclude:
      - '*'
#
# variables:
#   - group: DevOps Access Keys
#   - name: version
#     value: $(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g')
#   - name: TagName
#     value: 'Fermitools-$((version))'

stages:
  #####################################
  # Stages - Microsoft Hosted VMs
  #####################################

  ### Build Stage ###
  - stage: build_stage
    displayName: 'Build Stage'
    jobs:
      - template: ./.azure-pipelines/azure-pipelines-linux.yml
      - template: ./.azure-pipelines/azure-pipelines-osx.yml
# stages:
#
# #####################################
# # Linux Stages - Microsoft Hosted VMs
# #####################################
#
#   ### Linux Build Stage ###
# - stage: linux_build_stage
#   displayName: 'Linux Build Stage'
# #  dependsOn: linux_prep_deps
#   jobs:
#   - job: buildTools
#     displayName: 'Build the Fermitools'
#     timeoutInMinutes: 150
#     pool:
#       vmImage: 'ubuntu-20.04'
#     variables:
#     - name: BUILD_NUMBER
#       value: $(conda search -c fermi/label/dev fermitools | grep -i $(version) | tail -1 | awk '{ print $3}' | cut -d "_" -f 2)
#     - name: VERSION
#       value: $(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g')
#     - name: TagName
#       value: Fermitools-$(grep -i 'set version' ../meta.yaml | awk '{ print $5}' | sed 's/"//g')
#     steps:
#     # Manually adding conda to the PATH is a step required by Microsoft
#     - bash: echo "##vso[task.prependpath]$CONDA/bin"
#       displayName: 'Add conda to PATH'
#     ### Build commands start here ###
#     # Query last build number for this version and iterate if necessary
#     - bash: echo "##vso[task.setvariable variable=BUILD_NUMBER]$(BUILD_NUMBER)"
#       displayName: 'Query last build number of this version'
#     - bash: echo "##vso[task.setvariable variable=BUILD_NUMBER]$(expr $BUILD_NUMBER + 1)"
#       condition: notIn(variables['BUILD_NUMBER'], variables['noSuch'])
#       displayName: 'Iterate build number if it exists'
#
#     # Set up environment and run the build
#     - bash: conda install --yes --quiet -c conda-forge anaconda-client conda-build libiconv pathlib2
#       displayName: 'Set up build environment'
#
#     - bash: conda build -c conda-forge -c fermi recipe
#       displayName: 'Run the build'
#     - bash: anaconda -v -t $(Jasercion-Anaconda-Api) upload -u fermi --label=dev --label=cmake-$(TagName) --label=$(Build.SourceBranchName) --force /usr/share/miniconda/conda-bld/linux-64/fermitools-*
#       displayName: 'Upload build to Anaconda Cloud'
#     - task: DownloadSecureFile@1
#       name: sshkey # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
#       inputs:
#         secureFile: Azure_MacOS
#     - task: InstallSSHKey@0
#       inputs:
#         knownHostsEntry: github.com,192.30.253.112 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#         sshKeySecureFile: Azure_MacOS
#       displayName: 'Install SSH Key'
#
# #####################################
#
# #####################################
# # MacOS Stages - Microsoft Hosted VMs
# #####################################
#
#   #### MacOS Build Stage ##
# - stage: macos_build_stage
#   displayName: 'MacOS Build Stage'
#   dependsOn: []
#   jobs:
#   - job: buildTools
#     displayName: 'Build the Fermitools'
#     timeoutInMinutes: 150
#     pool:
#       vmImage: 'macOS-latest'
#     variables:
#     - name: VERSION
#       value: $(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g')
#     - name: BUILD_NUMBER
#       value: $(conda search -c fermi/label/dev fermitools | grep -i $(version) | tail -1 | awk '{ print $3}' | cut -d "_" -f 2)
#     steps:
#     - bash: |
#         ls -la /Applications/Xcode*
#       displayName: 'display Xcode paths'
#     # Manually adding conda to the PATH is a step required by Microsoft
#     - bash: echo "##vso[task.prependpath]$CONDA/bin"
#       displayName: 'Add conda to PATH'
#     # On Hosted macOS, the agent user doesn't have ownership of Miniconda's installation directory/
#     # We need to take ownership if we want to update conda or install packages globally
#     - bash: sudo chown -R $USER $CONDA
#       displayName: 'Take ownership of conda installation'
#
#     ### Build commands start here ###
#     # Query last build number for this version and iterate if necessary
#     - bash: echo "##vso[task.setvariable variable=BUILD_NUMBER]$(BUILD_NUMBER)"
#       displayName: 'Query last build number of this version'
#     - bash: echo "##vso[task.setvariable variable=BUILD_NUMBER]$(expr $BUILD_NUMBER + 1)"
#       condition: notIn(variables['BUILD_NUMBER'], variables['noSuch'])
#       displayName: 'Iterate build number if it exists'
#     # Set up environment and run the build
#     - bash: conda install --yes --quiet -c conda-forge anaconda-client conda-build pathlib2
#       displayName: 'Set up build environment'
#     - bash: conda build -c conda-forge -c fermi .
#       displayName: 'Run the build'
#     - bash: anaconda -v -t $(Jasercion-Anaconda-Api) upload -u fermi --label=dev --label=$(TagName) --label=$(Build.SourceBranchName) --force /usr/local/miniconda/conda-bld/osx-64/fermitools-*
#       displayName: 'Upload build to Anaconda Cloud'
#     - task: DownloadSecureFile@1
#       name: sshkey # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
#       inputs:
#         secureFile: Azure_MacOS
#     - task: InstallSSHKey@0
#       inputs:
#         knownHostsEntry: github.com,192.30.253.112 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#         sshKeySecureFile: Azure_MacOS
#       displayName: 'Install SSH Key'
#
#
# ######################################
# # Repository Synchronization
# ######################################
#
# - stage: repo_tag_sync
#   displayName: 'Repo Tag Stage'
#   dependsOn:
#     - linux_build_stage
#     - macos_build_stage
#   jobs:
#   - job: SyncTags
#     displayName: 'Synchronize tags across repos'
#     timeoutInMinutes: 20
#     pool:
#       vmImage: 'ubuntu-latest'
#     variables:
#     - name: VersionChild
#       value: $(grep -i 'set version' ../meta.yaml | awk '{ print $5}' | sed 's/"//g')
#     - name: Version
#       value: $(grep -i 'set version' meta.yaml | awk '{ print $5}' | sed 's/"//g')
#     - name: TagNameChild
#       value: "Fermitools-$(VersionChild)"
#     - name: TagName
#       value: "Fermitools-$(Version)"
#     steps:
#     # Manually adding conda to the PATH is a step required by Microsoft
#     - bash: echo "##vso[task.prependpath]$CONDA/bin"
#       displayName: 'Add conda to PATH'
#     # Set up environment and run the build
#     - bash: conda install --yes --quiet -c conda-forge libiconv pathlib2 git
#       displayName: 'Set up build environment'
#     - bash: |
#         echo $(TagNameChild)
#         git config --global user.email "joseph.a.asercion@nasa.gov"
#         git config --global user.name "Fermi.AzureCI.Bot"
#         git clone --init --recursive git@github.com:fermi-lat/ScienceTools.git
#       displayName: 'Download Sources'
#     - bash: |
#         cd ScienceTools
#         echo $(TagNameChild)
#         # Tag the components
#         git submodule foreach 'git tag -f -m "Automatic tag generated by Azure Pipeline." $(TagNameChild)'
#         git submodule foreach 'git push --tags --force'
#         # Tag the ScienceTools
#         git tag -f -m "Automatic tag generated by Azure Pipeline." $(TagNameChild)
#         git push --tags --force
#       displayName: 'Tag Github Repositories'
#     - task: DownloadSecureFile@1
#       name: sshkey # The name with which to reference the secure file's path on the agent, like $(mySecureFile.secureFilePath)
#       inputs:
#         secureFile: Azure_MacOS
#     - task: InstallSSHKey@0
#       inputs:
#         knownHostsEntry: github.com,192.30.253.112 ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==
#         sshKeySecureFile: Azure_MacOS
#       displayName: 'Save Explicit Build Dependencies list'
